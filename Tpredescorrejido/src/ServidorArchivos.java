import java.io.*;
import java.net.*;

public class ServidorArchivos {
    private static final int PUERTO = 8080;
    private static final String CARPETA_SERVIDOR = ".idea/carpeta_servidor/";

    public static void main(String[] args) {
        // Crear carpeta del servidor
        File carpetaServidor = new File(CARPETA_SERVIDOR);
        carpetaServidor.mkdirs();

        try (ServerSocket servidor = new ServerSocket(PUERTO)) {
            System.out.println("üü¢ SERVIDOR INICIADO");
            System.out.println("üìÇ Carpeta del servidor: " + carpetaServidor.getAbsolutePath());
            System.out.println("üîå Puerto: " + PUERTO);
            System.out.println("‚è≥ Esperando archivos...\n");

            while (true) {
                Socket cliente = servidor.accept();
                System.out.println("üë§ Cliente conectado: " + cliente.getInetAddress());
                new Thread(() -> recibirArchivo(cliente)).start();
            }
        } catch (IOException e) {
            System.err.println("‚ùå Error en servidor: " + e.getMessage());
        }
    }

    private static void recibirArchivo(Socket cliente) {
        try (DataInputStream entrada = new DataInputStream(cliente.getInputStream());
             DataOutputStream salida = new DataOutputStream(cliente.getOutputStream())) {

            String nombreArchivo = entrada.readUTF();
            long tama√±oArchivo = entrada.readLong();

            System.out.println("üì• Recibiendo: " + nombreArchivo + " (" + tama√±oArchivo + " bytes)");

            File archivoDestino = new File(CARPETA_SERVIDOR + nombreArchivo);
            System.out.println("üíæ Guardando en: " + archivoDestino.getAbsolutePath());

            try (FileOutputStream archivoSalida = new FileOutputStream(archivoDestino)) {
                byte[] buffer = new byte[4096];
                long bytesRecibidos = 0;
                int bytesLeidos;

                while (bytesRecibidos < tama√±oArchivo) {
                    bytesLeidos = entrada.read(buffer, 0,
                            (int) Math.min(buffer.length, tama√±oArchivo - bytesRecibidos));

                    if (bytesLeidos == -1) break;

                    archivoSalida.write(buffer, 0, bytesLeidos);
                    bytesRecibidos += bytesLeidos;

                    int progreso = (int) ((bytesRecibidos * 100) / tama√±oArchivo);
                    if (progreso % 25 == 0) {
                        System.out.println("üìä Progreso: " + progreso + "%");
                    }
                }

                System.out.println("‚úÖ Archivo guardado: " + archivoDestino.getAbsolutePath());
                System.out.println("üìÅ Ve a buscar tu archivo en: " + new File(CARPETA_SERVIDOR).getAbsolutePath());
                salida.writeUTF("‚úÖ Archivo recibido correctamente");
            }

        } catch (IOException e) {
            System.err.println("‚ùå Error recibiendo archivo: " + e.getMessage());
        } finally {
            try {
                cliente.close();
                System.out.println("üîå Cliente desconectado\n");
            } catch (IOException e) {
                System.err.println("‚ùå Error cerrando conexi√≥n");
            }
        }
    }
}